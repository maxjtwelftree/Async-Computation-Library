import matplotlib.pyplot as plt

# Your JSON data
data = [
[{"Gain": 99.25041833759677, "Best": 46.98, "Worst": -17.53, "Average": 0.5, "Std": 4.86, "loss_perc": 45.0, "gains_perc": 55.0, "sharp_ratio": 0.54, "sortino_ratio": 0.967}, {"Gain": -25.627552184812775, "Best": 19.04, "Worst": -25.65, "Average": -0.13, "Std": 4.42, "loss_perc": 44.0, "gains_perc": 56.0, "sharp_ratio": -0.154, "sortino_ratio": -0.154}, {"Gain": 118.34963463004053, "Best": 56.68, "Worst": -14.3, "Average": 0.59, "Std": 4.93, "loss_perc": 44.5, "gains_perc": 55.5, "sharp_ratio": 0.635, "sortino_ratio": 1.456}, {"Gain": 69.61410317538986, "Best": 20.78, "Worst": -19.12, "Average": 0.35, "Std": 3.87, "loss_perc": 45.0, "gains_perc": 55.0, "sharp_ratio": 0.476, "sortino_ratio": 0.555}, {"Gain": 108.88598390859737, "Best": 58.38, "Worst": -14.91, "Average": 0.54, "Std": 5.42, "loss_perc": 45.0, "gains_perc": 55.0, "sharp_ratio": 0.531, "sortino_ratio": 1.044}, {"Gain": 95.4978618642171, "Best": 49.26, "Worst": -12.43, "Average": 0.48, "Std": 4.73, "loss_perc": 46.0, "gains_perc": 54.0, "sharp_ratio": 0.534, "sortino_ratio": 1.179}, {"Gain": 176.16893679270083, "Best": 89.22, "Worst": -12.14, "Average": 0.88, "Std": 7.55, "loss_perc": 42.5, "gains_perc": 57.5, "sharp_ratio": 0.618, "sortino_ratio": 1.939}, {"Gain": 6.034328772676117, "Best": 13.46, "Worst": -15.65, "Average": 0.03, "Std": 3.3, "loss_perc": 46.5, "gains_perc": 53.5, "sharp_ratio": 0.048, "sortino_ratio": 0.057}, {"Gain": 135.32093861635613, "Best": 64.01, "Worst": -16.96, "Average": 0.68, "Std": 5.62, "loss_perc": 43.0, "gains_perc": 57.0, "sharp_ratio": 0.637, "sortino_ratio": 1.477}, {"Gain": 38.78111052378876, "Best": 53.58, "Worst": -13.54, "Average": 0.19, "Std": 4.71, "loss_perc": 48.5, "gains_perc": 51.5, "sharp_ratio": 0.218, "sortino_ratio": 0.486}, {"Gain": 180.98224371501306, "Best": 53.85, "Worst": -10.61, "Average": 0.9, "Std": 5.56, "loss_perc": 42.5, "gains_perc": 57.5, "sharp_ratio": 0.861, "sortino_ratio": 2.447}, {"Gain": 84.64316235475353, "Best": 26.58, "Worst": -8.91, "Average": 0.42, "Std": 3.25, "loss_perc": 46.5, "gains_perc": 53.5, "sharp_ratio": 0.688, "sortino_ratio": 1.408}, {"Gain": 41.08256694718231, "Best": 24.81, "Worst": -13.82, "Average": 0.21, "Std": 3.7, "loss_perc": 44.0, "gains_perc": 56.0, "sharp_ratio": 0.293, "sortino_ratio": 0.397}, {"Gain": 60.08596447372612, "Best": 22.57, "Worst": -15.6, "Average": 0.3, "Std": 3.54, "loss_perc": 45.5, "gains_perc": 54.5, "sharp_ratio": 0.449, "sortino_ratio": 0.6}, {"Gain": 55.32767581346132, "Best": 22.49, "Worst": -9.04, "Average": 0.28, "Std": 3.4, "loss_perc": 44.5, "gains_perc": 55.5, "sharp_ratio": 0.43, "sortino_ratio": 0.716}, {"Gain": 98.7819364607186, "Best": 93.15, "Worst": -21.96, "Average": 0.49, "Std": 7.53, "loss_perc": 46.5, "gains_perc": 53.5, "sharp_ratio": 0.347, "sortino_ratio": 0.886}, {"Gain": 74.95590041540908, "Best": 23.31, "Worst": -16.45, "Average": 0.37, "Std": 4.35, "loss_perc": 48.0, "gains_perc": 52.0, "sharp_ratio": 0.455, "sortino_ratio": 0.681}, {"Gain": 150.54870594292356, "Best": 84.32, "Worst": -18.86, "Average": 0.75, "Std": 7.45, "loss_perc": 47.5, "gains_perc": 52.5, "sharp_ratio": 0.535, "sortino_ratio": 1.203}, {"Gain": 121.28787921804322, "Best": 62.83, "Worst": -13.99, "Average": 0.61, "Std": 5.59, "loss_perc": 44.0, "gains_perc": 56.0, "sharp_ratio": 0.574, "sortino_ratio": 1.341}, {"Gain": 98.05719193590234, "Best": 50.88, "Worst": -18.01, "Average": 0.49, "Std": 5.11, "loss_perc": 49.5, "gains_perc": 50.5, "sharp_ratio": 0.508, "sortino_ratio": 1.018}, {"Gain": -106.14101545126798, "Best": 9.6, "Worst": -57.41, "Average": -0.53, "Std": 5.07, "loss_perc": 49.0, "gains_perc": 51.0, "sharp_ratio": -0.554, "sortino_ratio": -0.451}, {"Gain": 88.91283494147508, "Best": 27.02, "Worst": -13.38, "Average": 0.44, "Std": 3.64, "loss_perc": 40.0, "gains_perc": 60.0, "sharp_ratio": 0.646, "sortino_ratio": 0.945}, {"Gain": 118.74739042297209, "Best": 51.42, "Worst": -15.95, "Average": 0.59, "Std": 5.75, "loss_perc": 46.5, "gains_perc": 53.5, "sharp_ratio": 0.546, "sortino_ratio": 1.202}, {"Gain": 124.72459179492162, "Best": 58.93, "Worst": -8.69, "Average": 0.62, "Std": 5.28, "loss_perc": 43.0, "gains_perc": 57.0, "sharp_ratio": 0.624, "sortino_ratio": 1.565}, {"Gain": 63.749558608523614, "Best": 27.45, "Worst": -13.63, "Average": 0.32, "Std": 3.99, "loss_perc": 47.0, "gains_perc": 53.0, "sharp_ratio": 0.422, "sortino_ratio": 0.711}, {"Gain": 100.06155293922627, "Best": 75.19, "Worst": -20.49, "Average": 0.5, "Std": 6.51, "loss_perc": 48.5, "gains_perc": 51.5, "sharp_ratio": 0.407, "sortino_ratio": 0.891}, {"Gain": 168.4783146829721, "Best": 55.04, "Worst": -15.11, "Average": 0.84, "Std": 5.31, "loss_perc": 41.5, "gains_perc": 58.5, "sharp_ratio": 0.839, "sortino_ratio": 1.785}, {"Gain": 103.937798780975, "Best": 43.5, "Worst": -14.93, "Average": 0.52, "Std": 4.52, "loss_perc": 40.5, "gains_perc": 59.5, "sharp_ratio": 0.608, "sortino_ratio": 1.008}, {"Gain": -38.636460848482116, "Best": 18.2, "Worst": -34.81, "Average": -0.19, "Std": 4.4, "loss_perc": 42.5, "gains_perc": 57.5, "sharp_ratio": -0.232, "sortino_ratio": -0.2}, {"Gain": 104.27076692832922, "Best": 43.76, "Worst": -17.49, "Average": 0.52, "Std": 5.42, "loss_perc": 42.5, "gains_perc": 57.5, "sharp_ratio": 0.509, "sortino_ratio": 0.687}, {"Gain": 92.49141610498376, "Best": 37.7, "Worst": -19.82, "Average": 0.46, "Std": 4.19, "loss_perc": 40.5, "gains_perc": 59.5, "sharp_ratio": 0.584, "sortino_ratio": 0.887}, {"Gain": 32.86919320072161, "Best": 14.05, "Worst": -36.5, "Average": 0.16, "Std": 4.71, "loss_perc": 41.5, "gains_perc": 58.5, "sharp_ratio": 0.184, "sortino_ratio": 0.178}, {"Gain": 7.263930168095207, "Best": 20.91, "Worst": -13.33, "Average": 0.04, "Std": 3.26, "loss_perc": 44.5, "gains_perc": 55.5, "sharp_ratio": 0.059, "sortino_ratio": 0.079}, {"Gain": 52.53600820554316, "Best": 16.78, "Worst": -12.4, "Average": 0.26, "Std": 3.01, "loss_perc": 48.0, "gains_perc": 52.0, "sharp_ratio": 0.462, "sortino_ratio": 0.652}, {"Gain": 158.67525179497554, "Best": 86.65, "Worst": -18.45, "Average": 0.79, "Std": 7.09, "loss_perc": 40.5, "gains_perc": 59.5, "sharp_ratio": 0.592, "sortino_ratio": 1.422}, {"Gain": 108.01536298508239, "Best": 23.34, "Worst": -15.04, "Average": 0.54, "Std": 3.85, "loss_perc": 40.0, "gains_perc": 60.0, "sharp_ratio": 0.743, "sortino_ratio": 1.051}, {"Gain": 23.2334951704551, "Best": 14.38, "Worst": -24.55, "Average": 0.12, "Std": 4.22, "loss_perc": 42.0, "gains_perc": 58.0, "sharp_ratio": 0.146, "sortino_ratio": 0.162}, {"Gain": 43.919917171468484, "Best": 13.99, "Worst": -26.7, "Average": 0.22, "Std": 3.73, "loss_perc": 43.0, "gains_perc": 57.0, "sharp_ratio": 0.311, "sortino_ratio": 0.324}, {"Gain": 67.24020126866426, "Best": 45.21, "Worst": -34.67, "Average": 0.34, "Std": 5.22, "loss_perc": 46.5, "gains_perc": 53.5, "sharp_ratio": 0.341, "sortino_ratio": 0.445}, {"Gain": 270.3572302213329, "Best": 100.7, "Worst": -10.83, "Average": 1.35, "Std": 9.36, "loss_perc": 43.0, "gains_perc": 57.0, "sharp_ratio": 0.764, "sortino_ratio": 3.127}, {"Gain": 29.568372710388992, "Best": 17.25, "Worst": -14.58, "Average": 0.15, "Std": 3.27, "loss_perc": 46.0, "gains_perc": 54.0, "sharp_ratio": 0.239, "sortino_ratio": 0.322}, {"Gain": 104.89985656132205, "Best": 50.4, "Worst": -15.61, "Average": 0.52, "Std": 5.33, "loss_perc": 52.5, "gains_perc": 47.5, "sharp_ratio": 0.521, "sortino_ratio": 1.135}, {"Gain": 62.71577648232351, "Best": 24.92, "Worst": -17.1, "Average": 0.31, "Std": 3.6, "loss_perc": 46.0, "gains_perc": 54.0, "sharp_ratio": 0.461, "sortino_ratio": 0.616}, {"Gain": 117.74363719462885, "Best": 43.33, "Worst": -7.87, "Average": 0.59, "Std": 5.19, "loss_perc": 46.0, "gains_perc": 54.0, "sharp_ratio": 0.6, "sortino_ratio": 1.604}, {"Gain": 108.19024705132682, "Best": 56.2, "Worst": -10.65, "Average": 0.54, "Std": 4.95, "loss_perc": 46.0, "gains_perc": 54.0, "sharp_ratio": 0.578, "sortino_ratio": 1.384}, {"Gain": -31.099868265145478, "Best": 10.83, "Worst": -30.72, "Average": -0.16, "Std": 3.84, "loss_perc": 44.5, "gains_perc": 55.5, "sharp_ratio": -0.215, "sortino_ratio": -0.209}, {"Gain": 61.83635225238448, "Best": 29.67, "Worst": -15.16, "Average": 0.31, "Std": 3.9, "loss_perc": 44.5, "gains_perc": 55.5, "sharp_ratio": 0.42, "sortino_ratio": 0.593}, {"Gain": 119.49625741333512, "Best": 54.17, "Worst": -14.83, "Average": 0.6, "Std": 5.31, "loss_perc": 41.5, "gains_perc": 58.5, "sharp_ratio": 0.595, "sortino_ratio": 1.228}, {"Gain": 108.76302067277726, "Best": 41.21, "Worst": -12.65, "Average": 0.54, "Std": 4.39, "loss_perc": 45.5, "gains_perc": 54.5, "sharp_ratio": 0.655, "sortino_ratio": 1.198}, {"Gain": 202.28790611002944, "Best": 65.56, "Worst": -12.55, "Average": 1.01, "Std": 6.06, "loss_perc": 43.0, "gains_perc": 57.0, "sharp_ratio": 0.883, "sortino_ratio": 2.597}]     # Add more entries as needed
]

# Extract the "Gain" values for your strategy
strategy_gains = [entry["Gain"] for entry in data[0]]

# Calculate cumulative profit
cumulative_profit = [sum(strategy_gains[:i+1]) for i in range(len(strategy_gains))]

# Plotting
plt.plot(cumulative_profit, label='NN Stat Arb', marker='o', linestyle='-')
plt.title('Cumulative Profit Over Time')
plt.xlabel('Entries')
plt.ylabel('Cumulative Profit')
plt.grid(True)
plt.legend()
plt.show()
